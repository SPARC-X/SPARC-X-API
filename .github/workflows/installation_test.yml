name: unit tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-linux:
    defaults:
      run:
        shell: bash -l {0}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: "3.10"
        mamba-version: "*"
        channels: conda-forge,alchem0x2a,defaults
        channel-priority: true
        activate-environment: sparc-api-test
    - name: Install dependencies
      run: |
        # mamba install -c conda-forge ase>=3.22 pymatgen flake8 pytest
        mamba install -c alchem0x2a sparc
        # pip install pyfakefs
    - name: Install package
      run: |
        pip install -e ".[test]"
    - name: Test with pytest
      run: |
        # python -m pytest -svv tests/ --cov=sparc --cov-report=json --cov-report=html
        coverage run -a -m pytest -svv tests/
        coverage json --omit="tests/*.py"
        coverage html --omit="tests/*.py"
        COVERAGE=`cat coverage.json | jq .totals.percent_covered | xargs printf '%.*f' 0`
        echo "Current coverage is $COVERAGE"
        echo "COVPERCENT=$COVERAGE" >> $GITHUB_ENV
    - name: Lint with flake8
      run: |
        echo $CONDA_PREFIX
        conda info
        flake8 sparc/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 sparc/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Create badges
      run: |
        mkdir -p badges/
        # A coverage test badge
        anybadge --value=$COVPERCENT --file=badges/coverage.svg coverage
        # A version badge
        PIPVER=`pip show sparc-dft-api | grep Version | cut -d ' ' -f2`
        anybadge --value=$PIPVER --file=badges/package.svg -l sparc-dft-api
    - name: Manually add git badges
      run: |
        # Assuming a badges branch already exists!
        git fetch
        git switch badges || { echo "Could not check out badges branch. Have you created it on remote?"; exit 1; }
        git pull
        git add -f badges/*.svg
        git config --global user.email "alchem0x2a@gmail.com"
        git config --global user.name "Github Action Bot (badges only)"
        git commit -m "Update badges from run ${RID}" || true
        git push -u origin badges || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RID: ${{ github.run_id }}
    
